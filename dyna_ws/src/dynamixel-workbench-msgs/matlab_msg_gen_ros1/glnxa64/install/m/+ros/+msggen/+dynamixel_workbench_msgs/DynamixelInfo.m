
classdef DynamixelInfo < ros.Message
    %DynamixelInfo MATLAB implementation of dynamixel_workbench_msgs/DynamixelInfo
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'dynamixel_workbench_msgs/DynamixelInfo' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '8c02a7626d88db402a8af7bc5e0880d4' % The MD5 Checksum of the message definition
        PropertyList = { 'LoadInfo' 'ModelName' 'ModelNumber' 'ModelId' } % List of non-constant message properties
        ROSPropertyList = { 'load_info' 'model_name' 'model_number' 'model_id' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.dynamixel_workbench_msgs.DynamixelLoadInfo' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LoadInfo
        ModelName
        ModelNumber
        ModelId
    end
    methods
        function set.LoadInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.dynamixel_workbench_msgs.DynamixelLoadInfo'};
            validateattributes(val, validClasses, validAttributes, 'DynamixelInfo', 'LoadInfo')
            obj.LoadInfo = val;
        end
        function set.ModelName(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'DynamixelInfo', 'ModelName');
            obj.ModelName = char(val);
        end
        function set.ModelNumber(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DynamixelInfo', 'ModelNumber');
            obj.ModelNumber = uint16(val);
        end
        function set.ModelId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'DynamixelInfo', 'ModelId');
            obj.ModelId = uint8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.dynamixel_workbench_msgs.DynamixelInfo.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.dynamixel_workbench_msgs.DynamixelInfo;
            obj.reload(strObj);
        end
    end
end
